digraph "ICFG" {
	label="ICFG";

	Node0x55c3a609b340 [shape=record,color=black,label="{IntraICFGNode22 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode12   \n   br label %for.cond, !llvm.loop !4 }"];
	Node0x55c3a609b340 -> Node0x55c3a6099fe0[style=solid];
	Node0x55c3a609b150 [shape=record,color=black,label="{IntraICFGNode21 \{fun: main\}\nBinaryOPStmt: [Var31 \<-- (Var29 opcode13 Var21)]  \n   %inc = add nsw i32 %i.0, 1 }"];
	Node0x55c3a609b150 -> Node0x55c3a609b340[style=solid];
	Node0x55c3a609af60 [shape=record,color=black,label="{IntraICFGNode20 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode21   \n   br label %for.inc }"];
	Node0x55c3a609af60 -> Node0x55c3a609b150[style=solid];
	Node0x55c3a609ad90 [shape=record,color=green,label="{FunExitICFGNode19 \{fun: main\}\nPhiStmt: [Var17 \<-- ([Var30, ICFGNode16],)]  \n   ret i32 0 }"];
	Node0x55c3a608aec0 [shape=record,color=blue,label="{RetICFGNode18 \{fun: main\}}"];
	Node0x55c3a608aec0 -> Node0x55c3a609af60[style=solid];
	Node0x55c3a609aa80 [shape=record,color=red,label="{CallICFGNode17 \{fun: main\}}"];
	Node0x55c3a609aa80 -> Node0x55c3a608aec0[style=solid];
	Node0x55c3a609a890 [shape=record,color=black,label="{IntraICFGNode16 \{fun: main\}\n   ret i32 0 }"];
	Node0x55c3a609a890 -> Node0x55c3a609ad90[style=solid];
	Node0x55c3a609a6c0 [shape=record,color=black,label="{IntraICFGNode15 \{fun: main\}\nGepStmt: [Var35 \<-- Var6]  \n   %1 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.1, i64 0, i64 0 }"];
	Node0x55c3a609a6c0 -> Node0x55c3a609aa80[style=solid];
	Node0x55c3a609a4b0 [shape=record,color=black,label="{IntraICFGNode14 \{fun: main\}\nBranchStmt: [Condition Var32]\nSuccessor 0 ICFGNode15   Successor 1 ICFGNode16   \n   br i1 %cmp, label %for.body, label %for.end }"];
	Node0x55c3a609a4b0 -> Node0x55c3a609a6c0[style=solid];
	Node0x55c3a609a4b0 -> Node0x55c3a609a890[style=solid];
	Node0x55c3a609a1d0 [shape=record,color=black,label="{IntraICFGNode13 \{fun: main\}\nCmpStmt: [Var32 \<-- (Var29 predicate40 Var33)]  \n   %cmp = icmp slt i32 %i.0, 10 }"];
	Node0x55c3a609a1d0 -> Node0x55c3a609a4b0[style=solid];
	Node0x55c3a608d1d0 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n i8* null \{ constant data \}\nAddrStmt: [Var4 \<-- Var3]  \n @.str = private unnamed_addr constant [14 x i8] c\"%d + %d = %d\\0A\\00\", align 1 \{ Glob  \}\nAddrStmt: [Var6 \<-- Var3]  \n @.str.1 = private unnamed_addr constant [4 x i8] c\"%d\\0A\\00\", align 1 \{ Glob  \}\nAddrStmt: [Var21 \<-- Var3]  \n i32 1 \{ constant data \}\nAddrStmt: [Var22 \<-- Var3]  \n i32 2 \{ constant data \}\nAddrStmt: [Var30 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var33 \<-- Var3]  \n i32 10 \{ constant data \}\nAddrStmt: [Var8 \<-- Var9]  \n add \nAddrStmt: [Var15 \<-- Var16]  \n main \nAddrStmt: [Var25 \<-- Var26]  \n printf }"];
	Node0x55c3a608d1d0 -> Node0x55c3a608e5e0[style=solid];
	Node0x55c3a608e3e0 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: add\}}"];
	Node0x55c3a608e3e0 -> Node0x55c3a6093930[style=solid];
	Node0x55c3a6093930 [shape=record,color=black,label="{IntraICFGNode2 \{fun: add\}\nBinaryOPStmt: [Var13 \<-- (Var11 opcode13 Var12)]  \n   %add = add nsw i32 %a, %b }"];
	Node0x55c3a6093930 -> Node0x55c3a6093e60[style=solid];
	Node0x55c3a6093e60 [shape=record,color=black,label="{IntraICFGNode3 \{fun: add\}\n   ret i32 %add }"];
	Node0x55c3a6093e60 -> Node0x55c3a60991f0[style=solid];
	Node0x55c3a60991f0 [shape=record,color=green,label="{FunExitICFGNode4 \{fun: add\}\nPhiStmt: [Var10 \<-- ([Var13, ICFGNode3],)]  \n   ret i32 %add |{<s0>0x55c3a6091af0}}"];
	Node0x55c3a60991f0:s0 -> Node0x55c3a6091230[style=solid,color=blue];
	Node0x55c3a608e5e0 [shape=record,color=yellow,label="{FunEntryICFGNode5 \{fun: main\}}"];
	Node0x55c3a608e5e0 -> Node0x55c3a6099490[style=solid];
	Node0x55c3a6099490 [shape=record,color=red,label="{CallICFGNode6 \{fun: main\}\nCallPE: [Var11 \<-- Var21]  \n   %call = call i32 @add(i32 1, i32 2) \nCallPE: [Var12 \<-- Var22]  \n   %call = call i32 @add(i32 1, i32 2) |{<s0>0x55c3a6091af0}}"];
	Node0x55c3a6099490:s0 -> Node0x55c3a608e3e0[style=solid,color=red];
	Node0x55c3a6091230 [shape=record,color=blue,label="{RetICFGNode7 \{fun: main\}\nRetPE: [Var20 \<-- Var10]  \n   %call = call i32 @add(i32 1, i32 2) }"];
	Node0x55c3a6091230 -> Node0x55c3a6099910[style=solid];
	Node0x55c3a6099910 [shape=record,color=black,label="{IntraICFGNode8 \{fun: main\}\nGepStmt: [Var23 \<-- Var4]  \n   %0 = getelementptr inbounds [14 x i8], [14 x i8]* @.str, i64 0, i64 0 }"];
	Node0x55c3a6099910 -> Node0x55c3a6099ae0[style=solid];
	Node0x55c3a6099ae0 [shape=record,color=red,label="{CallICFGNode9 \{fun: main\}}"];
	Node0x55c3a6099ae0 -> Node0x55c3a608d900[style=solid];
	Node0x55c3a608d900 [shape=record,color=blue,label="{RetICFGNode10 \{fun: main\}}"];
	Node0x55c3a608d900 -> Node0x55c3a6099df0[style=solid];
	Node0x55c3a6099df0 [shape=record,color=black,label="{IntraICFGNode11 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode12   \n   br label %for.cond }"];
	Node0x55c3a6099df0 -> Node0x55c3a6099fe0[style=solid];
	Node0x55c3a6099fe0 [shape=record,color=black,label="{IntraICFGNode12 \{fun: main\}\nPhiStmt: [Var29 \<-- ([Var30, ICFGNode11],[Var31, ICFGNode22],)]  \n   %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ] }"];
	Node0x55c3a6099fe0 -> Node0x55c3a609a1d0[style=solid];
}
