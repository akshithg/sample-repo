digraph "ICFG" {
	label="ICFG";

	Node0x55a514174430 [shape=record,color=black,label="{IntraICFGNode21 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode11   \n   br label %for.cond, !llvm.loop !4 }"];
	Node0x55a514174430 -> Node0x55a514172de0[style=solid];
	Node0x55a514174170 [shape=record,color=black,label="{IntraICFGNode20 \{fun: main\}\nBinaryOPStmt: [Var27 \<-- (Var26 opcode13 Var14)]  \n   %inc = add nsw i32 %i.0, 1 }"];
	Node0x55a514174170 -> Node0x55a514174430[style=solid];
	Node0x55a514173f80 [shape=record,color=black,label="{IntraICFGNode19 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode20   \n   br label %for.inc }"];
	Node0x55a514173f80 -> Node0x55a514174170[style=solid];
	Node0x55a514169e40 [shape=record,color=blue,label="{RetICFGNode18 \{fun: main\}}"];
	Node0x55a514169e40 -> Node0x55a514173f80[style=solid];
	Node0x55a514173ac0 [shape=record,color=red,label="{CallICFGNode17 \{fun: main\}}"];
	Node0x55a514173ac0 -> Node0x55a514169e40[style=solid];
	Node0x55a5141738d0 [shape=record,color=black,label="{IntraICFGNode16 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode10   \n   br label %if.end }"];
	Node0x55a5141738d0 -> Node0x55a514172bf0[style=solid];
	Node0x55a514173700 [shape=record,color=black,label="{IntraICFGNode15 \{fun: main\}\nGepStmt: [Var31 \<-- Var6]  \n   %1 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.1, i64 0, i64 0 }"];
	Node0x55a514173700 -> Node0x55a514173ac0[style=solid];
	Node0x55a5141734f0 [shape=record,color=black,label="{IntraICFGNode14 \{fun: main\}\nBranchStmt: [Condition Var28]\nSuccessor 0 ICFGNode15   Successor 1 ICFGNode16   \n   br i1 %cmp1, label %for.body, label %for.end }"];
	Node0x55a5141734f0 -> Node0x55a514173700[style=solid];
	Node0x55a5141734f0 -> Node0x55a5141738d0[style=solid];
	Node0x55a514173210 [shape=record,color=black,label="{IntraICFGNode13 \{fun: main\}\nCmpStmt: [Var28 \<-- (Var26 predicate40 Var29)]  \n   %cmp1 = icmp slt i32 %i.0, 10 }"];
	Node0x55a514173210 -> Node0x55a5141734f0[style=solid];
	Node0x55a514166040 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n i8* null \{ constant data \}\nAddrStmt: [Var4 \<-- Var3]  \n @.str = private unnamed_addr constant [14 x i8] c\"%d + %d = %d\\0A\\00\", align 1 \{ Glob  \}\nAddrStmt: [Var6 \<-- Var3]  \n @.str.1 = private unnamed_addr constant [4 x i8] c\"%d\\0A\\00\", align 1 \{ Glob  \}\nAddrStmt: [Var14 \<-- Var3]  \n i32 1 \{ constant data \}\nAddrStmt: [Var15 \<-- Var3]  \n i32 2 \{ constant data \}\nAddrStmt: [Var22 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var29 \<-- Var3]  \n i32 10 \{ constant data \}\nAddrStmt: [Var8 \<-- Var9]  \n main \nAddrStmt: [Var18 \<-- Var19]  \n printf }"];
	Node0x55a514166040 -> Node0x55a514167450[style=solid];
	Node0x55a514167450 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: main\}}"];
	Node0x55a514167450 -> Node0x55a51416c880[style=solid];
	Node0x55a51416c880 [shape=record,color=black,label="{IntraICFGNode2 \{fun: main\}\nBinaryOPStmt: [Var13 \<-- (Var14 opcode13 Var15)]  \n   %add = add nsw i32 1, 2 }"];
	Node0x55a51416c880 -> Node0x55a51416cdb0[style=solid];
	Node0x55a51416cdb0 [shape=record,color=black,label="{IntraICFGNode3 \{fun: main\}\nGepStmt: [Var16 \<-- Var4]  \n   %0 = getelementptr inbounds [14 x i8], [14 x i8]* @.str, i64 0, i64 0 }"];
	Node0x55a51416cdb0 -> Node0x55a514172040[style=solid];
	Node0x55a514172040 [shape=record,color=red,label="{CallICFGNode4 \{fun: main\}}"];
	Node0x55a514172040 -> Node0x55a514167650[style=solid];
	Node0x55a514167650 [shape=record,color=blue,label="{RetICFGNode5 \{fun: main\}}"];
	Node0x55a514167650 -> Node0x55a514172430[style=solid];
	Node0x55a514172430 [shape=record,color=black,label="{IntraICFGNode6 \{fun: main\}\nBinaryOPStmt: [Var20 \<-- (Var13 opcode23 Var15)]  \n   %rem = srem i32 %add, 2 }"];
	Node0x55a514172430 -> Node0x55a514172620[style=solid];
	Node0x55a514172620 [shape=record,color=black,label="{IntraICFGNode7 \{fun: main\}\nCmpStmt: [Var21 \<-- (Var20 predicate32 Var22)]  \n   %cmp = icmp eq i32 %rem, 0 }"];
	Node0x55a514172620 -> Node0x55a514172810[style=solid];
	Node0x55a514172810 [shape=record,color=black,label="{IntraICFGNode8 \{fun: main\}\nBranchStmt: [Condition Var21]\nSuccessor 0 ICFGNode9   Successor 1 ICFGNode10   \n   br i1 %cmp, label %if.then, label %if.end }"];
	Node0x55a514172810 -> Node0x55a514172a20[style=solid];
	Node0x55a514172810 -> Node0x55a514172bf0[style=solid];
	Node0x55a514172a20 [shape=record,color=black,label="{IntraICFGNode9 \{fun: main\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode11   \n   br label %for.cond }"];
	Node0x55a514172a20 -> Node0x55a514172de0[style=solid];
	Node0x55a514172bf0 [shape=record,color=black,label="{IntraICFGNode10 \{fun: main\}\n   ret i32 0 }"];
	Node0x55a514172bf0 -> Node0x55a514172fd0[style=solid];
	Node0x55a514172de0 [shape=record,color=black,label="{IntraICFGNode11 \{fun: main\}\nPhiStmt: [Var26 \<-- ([Var22, ICFGNode9],[Var27, ICFGNode21],)]  \n   %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ] }"];
	Node0x55a514172de0 -> Node0x55a514173210[style=solid];
	Node0x55a514172fd0 [shape=record,color=green,label="{FunExitICFGNode12 \{fun: main\}\nPhiStmt: [Var10 \<-- ([Var22, ICFGNode10],)]  \n   ret i32 0 }"];
}
